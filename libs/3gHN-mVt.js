var r,t={};
/**
 * @license MIT
 * doc-path <https://github.com/mrodrig/doc-path>
 * Copyright (c) 2015-present, Michael Rodrigues.
 */function e(){if(r)return t;function e(r,t,i){const{dotIndex:o,key:a,remaining:s}=n(t);if(t.startsWith("__proto__")||t.startsWith("constructor")||t.startsWith("prototype"))return r;if(o>=0){const o=parseInt(a);if("object"==typeof r&&null!==r&&!(a in r)&&Array.isArray(r)&&!isNaN(o))return r[a]=r[a]??{},e(r[a],s,i),r;if("object"==typeof r&&null!==r&&!(a in r)&&Array.isArray(r))return r.forEach((r=>e(r,t,i))),r;if("object"==typeof r&&null!==r&&!(a in r)&&!Array.isArray(r)){const{key:e}=n(s),o=parseInt(e);if(isNaN(o)){if(""===s)return r[t]=i,r;r[a]={}}else r[a]=[]}e(r[a],s,i)}else{if(Array.isArray(r)){const n=parseInt(a);return t!==a||-1!==o||isNaN(n)?(r.forEach((r=>e(r,s,i))),r):(r[a]=i,r)}r[a]=i}return r}function n(r){const t=function(r){for(let t=0;t<r.length;t++){const e=t>0?r[t-1]:"";if("."===r[t]&&"\\"!==e)return t}return-1}(r);return{dotIndex:t,key:r.slice(0,t>=0?t:void 0).replace(/\\./g,"."),remaining:r.slice(t+1)}}return r=1,Object.defineProperty(t,"__esModule",{value:!0}),t.setPath=t.evaluatePath=void 0,t.evaluatePath=function r(t,e){if(!t)return null;const{dotIndex:i,key:o,remaining:a}=n(e),s="object"==typeof t&&e in t?t[e]:void 0,f="object"==typeof t&&o in t?t[o]:void 0;if(i>=0&&"object"==typeof t&&!(e in t)){const{key:t}=n(a),e=parseInt(t);return Array.isArray(f)&&isNaN(e)?f.map((t=>r(t,a))):r(f,a)}if(Array.isArray(t)){const n=parseInt(o);return e!==o||-1!==i||isNaN(n)?t.map((t=>r(t,e))):f}return i>=0&&e!==o&&"object"==typeof t&&o in t?r(f,a):-1===i&&"object"==typeof t&&o in t&&!(e in t)?f:s},t.setPath=function(r,t,n){if(!r)throw new Error("No object was provided.");if(!t)throw new Error("No keyPath was provided.");return e(r,t,n)},t}export{e as r};
